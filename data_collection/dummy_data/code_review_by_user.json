{"num_issue_comments": 27, "num_pr_reviews": 21, "issue_comments": [{"node": {"id": "MDEyOklzc3VlQ29tbWVudDY0MjI0MTY5MQ==", "bodyHTML": "<p>Sorry I saw this a bit late -- but it also LGTM!</p>", "bodyText": "Sorry I saw this a bit late -- but it also LGTM!", "url": "https://github.com/MLH-Fellowship/werkzeug/pull/2#issuecomment-642241691"}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDY0MzM4MDA3NA==", "bodyHTML": "<p>Ready for maintainer review.</p>", "bodyText": "Ready for maintainer review.", "url": "https://github.com/pallets/werkzeug/pull/1835#issuecomment-643380074"}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDY0Mzc4MjUyNg==", "bodyHTML": "<p>Is it alright if I also jump on this one? (if you're looking for another person to work on this with)</p>", "bodyText": "Is it alright if I also jump on this one? (if you're looking for another person to work on this with)", "url": "https://github.com/gleitz/howdoi/issues/274#issuecomment-643782526"}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDY0NDM4MDY1NA==", "bodyHTML": "<p>What about a simple, hard-coded <code>howdoi use howdoi</code> or <code>howdoi howdoi</code> command that will reiterate the most simple commands for using howdoi? Might only need to augment the README to include one line: <code>If you're new to howdoi: type 'howdoi use howdoi'</code> or something.</p>\n<p>i.e.</p>\n<pre><code>$ howdoi use howdoi\n&gt; howdoi foo\n&gt; howdoi foo -a (read entire answer)\n&gt; howdoi foo -n [number] (retrieve that number of answers)\n</code></pre>", "bodyText": "What about a simple, hard-coded howdoi use howdoi or howdoi howdoi command that will reiterate the most simple commands for using howdoi? Might only need to augment the README to include one line: If you're new to howdoi: type 'howdoi use howdoi' or something.\ni.e.\n$ howdoi use howdoi\n> howdoi foo\n> howdoi foo -a (read entire answer)\n> howdoi foo -n [number] (retrieve that number of answers)", "url": "https://github.com/gleitz/howdoi/issues/279#issuecomment-644380654"}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDY0NDk4OTY3NA==", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/YKo20010/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/YKo20010\">@YKo20010</a> and I decided to add a new <code>-jf</code> flag. I recall in our last meeting we talked about how the functionality of some of the features the others were working on used the raw JSON response from Gabriel's function, so we made a new flag with cleaner, formatted JSON (as perhaps the formatted JSON wouldn't work properly with the features the others were working on)</p>", "bodyText": "@YKo20010 and I decided to add a new -jf flag. I recall in our last meeting we talked about how the functionality of some of the features the others were working on used the raw JSON response from Gabriel's function, so we made a new flag with cleaner, formatted JSON (as perhaps the formatted JSON wouldn't work properly with the features the others were working on)", "url": "https://github.com/gleitz/howdoi/pull/276#issuecomment-644989674"}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDY0NTYxMzY3NQ==", "bodyHTML": "<p>After talking with Benjamin, instead of using a new flag to make the JSON response pretty, we'll be using <code>json.tool</code> instead if the user chooses to return an easy to read JSON object. Will be updating documentation to reflect this alongside the new <code>-j</code> flag. <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>", "bodyText": "After talking with Benjamin, instead of using a new flag to make the JSON response pretty, we'll be using json.tool instead if the user chooses to return an easy to read JSON object. Will be updating documentation to reflect this alongside the new -j flag. \ud83d\udc4d", "url": "https://github.com/gleitz/howdoi/pull/276#issuecomment-645613675"}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDY0NTYxNTE4Ng==", "bodyHTML": "<p>I think a .gif would be a nice idea. I've done that before in my prior repositories, if Benjamin approves I'd be glad to record myself using howdoi.</p>\n<p>Will be updating the README with the new <code>-j</code> flag as well as how to prettify it if need be using <code>json.tool</code></p>", "bodyText": "I think a .gif would be a nice idea. I've done that before in my prior repositories, if Benjamin approves I'd be glad to record myself using howdoi.\nWill be updating the README with the new -j flag as well as how to prettify it if need be using json.tool", "url": "https://github.com/gleitz/howdoi/issues/278#issuecomment-645615186"}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDY0NjIxNDY3MQ==", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/gleitz/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gleitz\">@gleitz</a> we're ready for your review!</p>\n<p>The JSON functionality works with the <code>-j</code> flag, I updated the README accordingly to reflect this, added a note about how you can prettify the response by adding <code>| python -m json.tool</code></p>\n<p>I also added a short little demo .gif in the README too; if you approve of the .gif addition I can make a better one and show more of the features (this was a really short and scrappy one I made quickly)</p>", "bodyText": "@gleitz we're ready for your review!\nThe JSON functionality works with the -j flag, I updated the README accordingly to reflect this, added a note about how you can prettify the response by adding | python -m json.tool\nI also added a short little demo .gif in the README too; if you approve of the .gif addition I can make a better one and show more of the features (this was a really short and scrappy one I made quickly)", "url": "https://github.com/gleitz/howdoi/pull/276#issuecomment-646214671"}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDY0NjgyMDc0Mw==", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/YKo20010/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/YKo20010\">@YKo20010</a> and I will be working on this issue!</p>", "bodyText": "@YKo20010 and I will be working on this issue!", "url": "https://github.com/tiangolo/fastapi/issues/1599#issuecomment-646820743"}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDY0Njg0Njg4OQ==", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/gleitz/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gleitz\">@gleitz</a> ready for your review whenever you got the time!</p>\n<ul>\n<li>removed the .gif from the README and will make that into its own issue and also changed the help text for the JSON command</li>\n<li>went through all the comments and updated everything accordingly</li>\n<li>all tests passing!</li>\n</ul>", "bodyText": "@gleitz ready for your review whenever you got the time!\n\nremoved the .gif from the README and will make that into its own issue and also changed the help text for the JSON command\nwent through all the comments and updated everything accordingly\nall tests passing!", "url": "https://github.com/gleitz/howdoi/pull/276#issuecomment-646846889"}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDY0NzcyNjQ4Mw==", "bodyHTML": "<p>These two projects are really interesting; I'll see how we can integrate them with howdoi!</p>", "bodyText": "These two projects are really interesting; I'll see how we can integrate them with howdoi!", "url": "https://github.com/gleitz/howdoi/issues/286#issuecomment-647726483"}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDY0ODMwODcyMw==", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/seguri/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/seguri\">@seguri</a> hi - after discussing with Jakub we've decided to revisit this topic later, sorry about the notif!</p>", "bodyText": "@seguri hi - after discussing with Jakub we've decided to revisit this topic later, sorry about the notif!", "url": "https://github.com/jakubroztocil/httpie/issues/605#issuecomment-648308723"}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDY0OTA3ODMxMA==", "bodyHTML": "<p>Ready for your review <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/gleitz/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gleitz\">@gleitz</a>!</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/35744669/85628928-f867c800-b63e-11ea-89c6-365113914f13.png\"><img src=\"https://user-images.githubusercontent.com/35744669/85628928-f867c800-b63e-11ea-89c6-365113914f13.png\" alt=\"hi\" style=\"max-width:100%;\"></a></p>", "bodyText": "Ready for your review @gleitz!", "url": "https://github.com/gleitz/howdoi/pull/288#issuecomment-649078310"}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDY1MDQ4MDU4NA==", "bodyHTML": "<p>I will be happy to accept any PRs</p>", "bodyText": "I will be happy to accept any PRs", "url": "https://github.com/chrisngyn/LCwithJustin/issues/1#issuecomment-650480584"}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDY1MDY1Mzg0NQ==", "bodyHTML": "<p>Closed by <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"646599860\" data-permission-text=\"Title is private\" data-url=\"https://github.com/chrisngyn/LCwithJustin/issues/2\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/chrisngyn/LCwithJustin/pull/2/hovercard\" href=\"https://github.com/chrisngyn/LCwithJustin/pull/2\">#2</a>.</p>", "bodyText": "Closed by #2.", "url": "https://github.com/chrisngyn/LCwithJustin/issues/1#issuecomment-650653845"}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDY1MTMyMDExMA==", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/gleitz/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gleitz\">@gleitz</a> ready for your review.</p>\n<p>Since our last meeting;</p>\n<ul>\n<li>replaced <code>-sn</code> with <code>-save</code></li>\n<li>replaced <code>-sv</code> with <code>-view</code></li>\n<li>replaced <code>-sc</code> with <code>-clear</code></li>\n<li>removed <code>-se</code> entirely (editing feature)</li>\n<li>added <code>-remove</code> functionality, users will be prompted from their stash which entry they want to delete</li>\n</ul>", "bodyText": "@gleitz ready for your review.\nSince our last meeting;\n\nreplaced -sn with -save\nreplaced -sv with -view\nreplaced -sc with -clear\nremoved -se entirely (editing feature)\nadded -remove functionality, users will be prompted from their stash which entry they want to delete", "url": "https://github.com/gleitz/howdoi/pull/288#issuecomment-651320110"}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDY1MjA0MjMxOA==", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/gleitz/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gleitz\">@gleitz</a> ready for your review.</p>\n<p>Here's a quick use case for how you would use the stashing feature if you wanted to try it yourself:</p>\n<pre><code>$ howdoi --save while loop python\n$ howdoi --save format date bash\n$ howdoi --view\n$ howdoi --remove (will be prompted which to delete, we have the appropriate error handling too with bad inputs)\n$ howdoi --empty (will be prompted to confirm)\n</code></pre>\n<p>Since our last meeting;</p>\n<ul>\n<li>used global variables for text formatting which we use <code>.format()</code> on</li>\n<li>replaced -save, -view, -remove, -empty with --save, --view, --remove, --empty</li>\n<li>updated the README accordingly</li>\n</ul>\n<p>I know you asked us if we could use <code>f-strings</code> and we tried that, but we saw that it failed the Travis CI tests for Python versions 3.4 and 3.5 due to <code>f-strings</code> being adding in Python 3.6.</p>\n<p>We <em>could</em> have done something like this;</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">if</span> <span class=\"pl-s1\">version</span> <span class=\"pl-c1\">&lt;</span> <span class=\"pl-c1\">3.6</span>:\n    <span class=\"pl-s1\">manual</span> <span class=\"pl-s1\">formatting</span>...\n<span class=\"pl-s1\">else</span>:\n    <span class=\"pl-s1\">f</span><span class=\"pl-c1\">-</span><span class=\"pl-s1\">string</span>...</pre></div>\n<p>But this seemed redundant to me. I know that you wanted us to use <code>f-strings</code> to clean up the code base and make it easier to read, but due to Python 3.4 and 3.5 not having <code>f-strings</code>, we would have to use the manual formatting regardless and have an if statement to determine when we would use them.</p>\n<p>My solution was to still go with your suggestion of having global variables, so now instead of seeing <code>\"{}\".format('\\n\\033m...')</code> you would see <code>\"{}\".format(BOLD)</code> instead. I think this is easier to read than how it was before.</p>\n<p>Let us know what you think! <g-emoji class=\"g-emoji\" alias=\"smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f604.png\">\ud83d\ude04</g-emoji> <g-emoji class=\"g-emoji\" alias=\"tada\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f389.png\">\ud83c\udf89</g-emoji></p>", "bodyText": "@gleitz ready for your review.\nHere's a quick use case for how you would use the stashing feature if you wanted to try it yourself:\n$ howdoi --save while loop python\n$ howdoi --save format date bash\n$ howdoi --view\n$ howdoi --remove (will be prompted which to delete, we have the appropriate error handling too with bad inputs)\n$ howdoi --empty (will be prompted to confirm)\n\nSince our last meeting;\n\nused global variables for text formatting which we use .format() on\nreplaced -save, -view, -remove, -empty with --save, --view, --remove, --empty\nupdated the README accordingly\n\nI know you asked us if we could use f-strings and we tried that, but we saw that it failed the Travis CI tests for Python versions 3.4 and 3.5 due to f-strings being adding in Python 3.6.\nWe could have done something like this;\nif version < 3.6:\n    manual formatting...\nelse:\n    f-string...\nBut this seemed redundant to me. I know that you wanted us to use f-strings to clean up the code base and make it easier to read, but due to Python 3.4 and 3.5 not having f-strings, we would have to use the manual formatting regardless and have an if statement to determine when we would use them.\nMy solution was to still go with your suggestion of having global variables, so now instead of seeing \"{}\".format('\\n\\033m...') you would see \"{}\".format(BOLD) instead. I think this is easier to read than how it was before.\nLet us know what you think! \ud83d\ude04 \ud83c\udf89", "url": "https://github.com/gleitz/howdoi/pull/288#issuecomment-652042318"}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDY1NzcwODE1Mw==", "bodyHTML": "<blockquote>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\">  stats by pod (percent of commits to PRs to code reviews, etc.)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\">  discord stats (num of conversations, etc.)</li>\n</ul>\n</blockquote>\n<p>I like the stats by pod idea. I think though, that we'll have to pre-determine what usernames belong in what group, so we can sort them individually. Maybe we'll have a \"total_data_aggregation.py\" file that nabs all the information of all Fellows.</p>\n<p>Then, since we have all the data handy, we just manipulate it, adding what Fellow belongs to what group, etc.</p>\n<p>The Discord stats idea I like. I'll probably look into this more since I've worked a lot with the Discord API, if anyone else was interested, this Stack Overflow post seems interesting: <code>https://stackoverflow.com/questions/52214425/how-to-get-how-many-messages-has-been-sent-in-a-channel</code></p>", "bodyText": "stats by pod (percent of commits to PRs to code reviews, etc.)\n  discord stats (num of conversations, etc.)\n\n\nI like the stats by pod idea. I think though, that we'll have to pre-determine what usernames belong in what group, so we can sort them individually. Maybe we'll have a \"total_data_aggregation.py\" file that nabs all the information of all Fellows.\nThen, since we have all the data handy, we just manipulate it, adding what Fellow belongs to what group, etc.\nThe Discord stats idea I like. I'll probably look into this more since I've worked a lot with the Discord API, if anyone else was interested, this Stack Overflow post seems interesting: https://stackoverflow.com/questions/52214425/how-to-get-how-many-messages-has-been-sent-in-a-channel", "url": "https://github.com/chrisngyn/fellowship-class-profile/issues/1#issuecomment-657708153"}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDY1ODM3MTk2Nw==", "bodyHTML": "<p>As of now (07/14/2020 @ 3:32pm EST) and in accordance to our Google doc, we're just waiting on two important stats to be collected, namely, getting the total lines push + total number of files changed in 12 weeks and being able to separate the master list of all Fellows into their respective teams.</p>\n<p>After these two queries are figured out and translated into respective Python files, that'll be all the data aggregation business done. Will be closing this issue once those two queries are in.</p>", "bodyText": "As of now (07/14/2020 @ 3:32pm EST) and in accordance to our Google doc, we're just waiting on two important stats to be collected, namely, getting the total lines push + total number of files changed in 12 weeks and being able to separate the master list of all Fellows into their respective teams.\nAfter these two queries are figured out and translated into respective Python files, that'll be all the data aggregation business done. Will be closing this issue once those two queries are in.", "url": "https://github.com/chrisngyn/fellowship-class-profile/issues/1#issuecomment-658371967"}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDY1ODM3Mzk5OQ==", "bodyHTML": "<p>Oops. Forgot I have one last query to push.</p>", "bodyText": "Oops. Forgot I have one last query to push.", "url": "https://github.com/chrisngyn/fellowship-class-profile/pull/7#issuecomment-658373999"}}], "pr_reviews": [{"node": {"pullRequestReview": {"id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MjEyNjI5", "bodyHTML": "<p>Looks awesome! After we get this merged, we can start working on our REST API to communicate this data to our front-end <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>", "bodyText": "Looks awesome! After we get this merged, we can start working on our REST API to communicate this data to our front-end \ud83d\udc4d", "url": "https://github.com/chrisngyn/fellowship-class-profile/pull/5#pullrequestreview-448212629", "comments": {"edges": []}}}}, {"node": {"pullRequestReview": {"id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MDc5ODYw", "bodyHTML": "<p>LGTM.</p>\n<p>Nice touch of French.</p>", "bodyText": "LGTM.\nNice touch of French.", "url": "https://github.com/chrisngyn/fellowship-class-profile/pull/4#pullrequestreview-448079860", "comments": {"edges": []}}}}, {"node": {"pullRequestReview": {"id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NzU3NjAx", "bodyHTML": "<p>LGTM <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>", "bodyText": "LGTM \ud83d\udc4d", "url": "https://github.com/chrisngyn/fellowship-class-profile/pull/3#pullrequestreview-447757601", "comments": {"edges": []}}}}, {"node": {"pullRequestReview": {"id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMTM3MDgx", "bodyHTML": "<p>Looks good to me; might want to ask Sebastian more about if he's satisfied with the tests / wants us to add more.</p>", "bodyText": "Looks good to me; might want to ask Sebastian more about if he's satisfied with the tests / wants us to add more.", "url": "https://github.com/tiangolo/fastapi/pull/1627#pullrequestreview-441137081", "comments": {"edges": []}}}}, {"node": {"pullRequestReview": {"id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMDM4NTcw", "bodyHTML": "<p>LGTM <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>", "bodyText": "LGTM \ud83d\udc4d", "url": "https://github.com/gleitz/howdoi/pull/288#pullrequestreview-441038570", "comments": {"edges": []}}}}, {"node": {"pullRequestReview": {"id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NzMyMTM2", "bodyHTML": "", "bodyText": "", "url": "https://github.com/chrisngyn/LCwithJustin/pull/2#pullrequestreview-438732136", "comments": {"edges": [{"node": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU4MTI1Nw==", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center text-gray\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg class=\"octicon octicon-info hide-sm\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path></svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first x-last\"> A group of computer science noobs just doing</span> mock interviews with each other</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"x x-first\">Justin is my friend </span><span class=\"pl-k x\">and</span><span class=\"x\"> we </span><span class=\"pl-k x\">do</span><span class=\"x x-last\"> LeetCode +</span> mock interviews with each other<span class=\"x x-first x-last\">. \ud83d\udc4d </span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "bodyText": "Suggested change\n        \n          \n        \n      \n    \n    \n      \n          \n            \n             A group of computer science noobs just doing mock interviews with each other\n          \n          \n            \n            Justin is my friend and we do LeetCode + mock interviews with each other. \ud83d\udc4d", "url": "https://github.com/chrisngyn/LCwithJustin/pull/2#discussion_r446581257"}}]}}}}, {"node": {"pullRequestReview": {"id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NDI2NDEy", "bodyHTML": "", "bodyText": "", "url": "https://github.com/MLH-Fellowship/werkzeug/pull/5#pullrequestreview-429426412", "comments": {"edges": [{"node": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE3NzQyNg==", "bodyHTML": "<p>I agree. Our convention so far has been to abstract everything into functions for readability (abstract this into a function called <code>plainTraceback()</code>?), other than that it looks great! <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>", "bodyText": "I agree. Our convention so far has been to abstract everything into functions for readability (abstract this into a function called plainTraceback()?), other than that it looks great! \ud83d\udc4d", "url": "https://github.com/MLH-Fellowship/werkzeug/pull/5#discussion_r439177426"}}]}}}}, {"node": {"pullRequestReview": {"id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MTcwOTAx", "bodyHTML": "<p><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>", "bodyText": "\ud83d\udc4d", "url": "https://github.com/MLH-Fellowship/werkzeug/pull/3#pullrequestreview-429170901", "comments": {"edges": []}}}}, {"node": {"pullRequestReview": {"id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0OTQ3ODI2", "bodyHTML": "<p>LG2M</p>", "bodyText": "LG2M", "url": "https://github.com/MLH-Fellowship/0.5.2-whereami/pull/41#pullrequestreview-424947826", "comments": {"edges": []}}}}, {"node": {"pullRequestReview": {"id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0ODU3NTA1", "bodyHTML": "<p>gg</p>", "bodyText": "gg", "url": "https://github.com/MLH-Fellowship/0.5.2-whereami/pull/38#pullrequestreview-424857505", "comments": {"edges": []}}}}, {"node": {"pullRequestReview": {"id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NzYyMDcy", "bodyHTML": "<p>wow what a great programmer</p>", "bodyText": "wow what a great programmer", "url": "https://github.com/MLH-Fellowship/0.5.2-whereami/pull/37#pullrequestreview-424762072", "comments": {"edges": []}}}}, {"node": {"pullRequestReview": {"id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NjEyODcw", "bodyHTML": "<p><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>", "bodyText": "\ud83d\udc4d", "url": "https://github.com/MLH-Fellowship/0.5.2-whereami/pull/28#pullrequestreview-424612870", "comments": {"edges": []}}}}, {"node": {"pullRequestReview": {"id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzODcwMzY0", "bodyHTML": "", "bodyText": "", "url": "https://github.com/MLH-Fellowship/0.5.2-whereami/pull/23#pullrequestreview-423870364", "comments": {"edges": [{"node": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgwNzUyNw==", "bodyHTML": "<p>I think this should be <code>if len(code) &gt; 12:</code> because 6PH57VP3+PR6 is a valid code, but 6PH5 is also a valid code, same with 6P. The more characters you have just narrows down your position, but AFAIK <a href=\"https://en.wikipedia.org/wiki/Open_Location_Code\" rel=\"nofollow\">codes can be shorter than 12</a>?</p>", "bodyText": "I think this should be if len(code) > 12: because 6PH57VP3+PR6 is a valid code, but 6PH5 is also a valid code, same with 6P. The more characters you have just narrows down your position, but AFAIK codes can be shorter than 12?", "url": "https://github.com/MLH-Fellowship/0.5.2-whereami/pull/23#discussion_r434807527"}}]}}}}, {"node": {"pullRequestReview": {"id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNjAyOTk4", "bodyHTML": "", "bodyText": "", "url": "https://github.com/MLH-Fellowship/0.5.2-whereami/pull/18#pullrequestreview-423602998", "comments": {"edges": [{"node": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYwNDQ1NA==", "bodyHTML": "<p>do we use sys? the linter is complaining it was imported but not used</p>", "bodyText": "do we use sys? the linter is complaining it was imported but not used", "url": "https://github.com/MLH-Fellowship/0.5.2-whereami/pull/18#discussion_r434604454"}}]}}}}, {"node": {"pullRequestReview": {"id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNTUyMzk1", "bodyHTML": "<p>I actually hadn't thought of doing a reverse mapping -- good idea! <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>", "bodyText": "I actually hadn't thought of doing a reverse mapping -- good idea! \ud83d\udc4d", "url": "https://github.com/MLH-Fellowship/0.5.2-whereami/pull/19#pullrequestreview-423552395", "comments": {"edges": []}}}}, {"node": {"pullRequestReview": {"id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMDk4MTM1", "bodyHTML": "<p><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>", "bodyText": "\ud83d\udc4d", "url": "https://github.com/MLH-Fellowship/0.5.2-whereami/pull/12#pullrequestreview-423098135", "comments": {"edges": []}}}}, {"node": {"pullRequestReview": {"id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMDEyNDkz", "bodyHTML": "<p>skeleton app <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>", "bodyText": "skeleton app \ud83d\udc4d", "url": "https://github.com/MLH-Fellowship/0.5.2-whereami/pull/5#pullrequestreview-423012493", "comments": {"edges": []}}}}, {"node": {"pullRequestReview": {"id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMDU2MTI4", "bodyHTML": "<p><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>", "bodyText": "\ud83d\udc4d", "url": "https://github.com/chrisngyn/reviewing-a-pull-request/pull/4#pullrequestreview-422056128", "comments": {"edges": []}}}}, {"node": {"pullRequestReview": {"id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMDUyNjc2", "bodyHTML": "", "bodyText": "", "url": "https://github.com/chrisngyn/reviewing-a-pull-request/pull/3#pullrequestreview-422052676", "comments": {"edges": []}}}}, {"node": {"pullRequestReview": {"id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMDQ1MTcy", "bodyHTML": "<p>Good work!</p>", "bodyText": "Good work!", "url": "https://github.com/chrisngyn/reviewing-a-pull-request/pull/2#pullrequestreview-422045172", "comments": {"edges": []}}}}]}
